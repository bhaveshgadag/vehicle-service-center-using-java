/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vehservicemgmt;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.sun.glass.events.KeyEvent;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import org.jdesktop.swingx.combobox.ListComboBoxModel;

/**
 *
 * @author bhave
 */
public class BillDialog extends javax.swing.JDialog {
    private Vector vehDetails = null;
    private Vector empDetails = null;
    private Vector serviceDetails = null;
    private Vector partDetails = null;
    private Vector partUsedDetails = null;
    private Vector custDetails = null;
    int servID;

    /**
     * Creates new form BillDialog
     * @param serviceID
     */
    public BillDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        regNo.setEditable(false);
        jobDesc.setEditable(false);
        servDate.setEditable(false);
        serviceAdvisor.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        regNo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jobDesc = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        servDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        serviceAdvisor = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        billAdd = new javax.swing.JButton();
        billDelete = new javax.swing.JButton();
        partName = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        PartUsedTable = new javax.swing.JTable();
        generateBill = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Reg. No.");

        jLabel2.setText("Job Description");

        jobDesc.setColumns(20);
        jobDesc.setRows(5);
        jScrollPane1.setViewportView(jobDesc);

        jLabel3.setText("Date");

        jLabel4.setText("Service Advisor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(regNo))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(servDate, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(serviceAdvisor))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(regNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(servDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(serviceAdvisor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setText("Part No.");

        jLabel6.setText("Quantity");

        quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantityKeyTyped(evt);
            }
        });

        billAdd.setText("Add");
        billAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billAddActionPerformed(evt);
            }
        });

        billDelete.setText("Delete");
        billDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billDeleteActionPerformed(evt);
            }
        });

        partName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        PartUsedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Part ID", "Name", "MRP", "Quantity", "Total "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(PartUsedTable);

        generateBill.setText("Generate Bill");
        generateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(partName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(billDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(billAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(generateBill, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(billAdd)
                    .addComponent(partName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(billDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(generateBill))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void InfoDialog(String message){
        JFrame f = new JFrame();
        JOptionPane.showMessageDialog(f, message);
    }
    
    public void setdet(int serviceID){
        try {
            servID = serviceID;
            custDetails = dbconn.serviceCustomerSearch(serviceID);
            vehDetails =  dbconn.serviceVehicleSearch(serviceID);
            regNo.setText((String)vehDetails.elementAt(1));
            serviceDetails = dbconn.serviceSearch(serviceID);
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd ");
            Date date = (Date)serviceDetails.elementAt(2);
            servDate.setText(dateFormat.format(date));
            jobDesc.setText((String)serviceDetails.elementAt(1));
            empDetails = dbconn.serviceEmployeeSearch(serviceID);
            serviceAdvisor.setText((String)empDetails.elementAt(0));
            partDetails = dbconn.partDetails();
            ArrayList<String> pnames = new ArrayList<String>();
            for (int i = 0; i < partDetails.size(); i++){
                Vector inner = (Vector)partDetails.elementAt(i);
                pnames.add((String)inner.get(1));
            }
            Collections.sort(pnames);
            partName.setEditable(true);
            partName.setModel(new ListComboBoxModel<String>(pnames));
            partName.setSelectedIndex(-1);
            AutoCompleteDecorator.decorate(partName);
            partUsedDetails = dbconn.partUsedDetails(serviceID);
            if(partUsedDetails != null){
                try {
                    String[] coln = {"Part ID", "Part Name", "MRP", "Quantity", "Total Price"};
                    Vector<String> columnNames = new Vector<String>();
                    Collections.addAll(columnNames, coln);
                    PartUsedTable.setModel(new DefaultTableModel(dbconn.partUsedDetails(serviceID), columnNames));
                } catch (SQLException e) {
                     System.out.println("setdet partUsedDetail block: "+e);
                }
            }
            } catch (Exception e) {
                System.out.println("setdet block : "+e);
            }
    }
    
    private void billAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billAddActionPerformed
        // TODO add your handling code here:
        int i;
        double total = 0;
        Vector part = null;
        for (i = 0; i < partDetails.size(); i++){
            Vector inner = (Vector)partDetails.elementAt(i);
            if(inner.contains(partName.getSelectedItem())){
                part = (Vector)partDetails.elementAt(i);
                break;
            }
        }
        Vector values = new Vector();
        values.add(servID);
        values.add(part.elementAt(0));
        values.add((Object)quantity.getText());
        System.out.println("part "+part);
        System.out.println("billaction part id"+part.elementAt(0));
        if (!((String)quantity.getText()).equals("") && ((String)quantity.getText()).matches("^[1-9]\\d{0,1}$")){
            try {
                dbconn.partsUsedInsert(values);
                String[] coln = {"Part ID", "Part Name", "MRP", "Quantity", "Total Price"};
                Vector<String> columnNames = new Vector<String>();
                Collections.addAll(columnNames, coln);
                partUsedDetails = dbconn.partUsedDetails(servID);
                PartUsedTable.setModel(new DefaultTableModel(partUsedDetails, columnNames));
                for(int row = 0; row <PartUsedTable.getRowCount(); row++){
                    total += (double)PartUsedTable.getValueAt(row, 4);
                }
                values.removeAllElements();
                values.add(total);
                values.add(servID);
                dbconn.serviceUpdateTotal(values);
            } catch (SQLException ex) {
                Logger.getLogger(BillDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            InfoDialog("Invalid Quantity");
        }
    }//GEN-LAST:event_billAddActionPerformed

    private void quantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityKeyTyped
        // TODO add your handling code here:
        MainFrame.onlyNumber(evt);
    }//GEN-LAST:event_quantityKeyTyped

    private void generateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBillActionPerformed
        // TODO add your handling code here:
        try{
            double total = 0;
            System.out.println(PartUsedTable.getValueAt(0, 0));
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream("Report.pdf"));
            document.open();
            
            Paragraph par1 = new Paragraph("Vehicle Service Center",new Font(Font.FontFamily.TIMES_ROMAN, 24));
            par1.setAlignment(Element.ALIGN_CENTER);
            document.add(par1);
            Paragraph par2 = new Paragraph("Contact no.: 8547631594",new Font(Font.FontFamily.TIMES_ROMAN, 12));
            par2.setAlignment(Element.ALIGN_CENTER);
            document.add(par2);
            document.add(new Paragraph(" "));
            Paragraph par3 = new Paragraph("Print Date : "+new Date().toString(),new Font(Font.FontFamily.TIMES_ROMAN, 7));
            par3.setAlignment(Element.ALIGN_RIGHT);
            document.add(par3);
            
            document.add(new Paragraph("______________________________________________________________________________"));
            document.add(new Paragraph(" "));
            PdfPTable details = new PdfPTable(2);
            details.setWidthPercentage(100);
            details.getDefaultCell().setBorderWidth(0f);
            details.getDefaultCell().setPadding(3);
            details.addCell("Customer ID : "+custDetails.elementAt(0).toString());
            details.addCell("Serviec ID : "+serviceDetails.elementAt(0));
            details.addCell("Customer Name : "+custDetails.elementAt(1));
            details.addCell("Job Description : "+serviceDetails.elementAt(1));
            details.addCell("Address : "+custDetails.elementAt(2).toString());
            details.addCell("Job Date : "+serviceDetails.elementAt(2).toString());
            details.addCell("Mobile : "+custDetails.elementAt(3).toString());
            details.addCell("Distance : "+serviceDetails.elementAt(3).toString());
            details.addCell("Email : "+custDetails.elementAt(4).toString());
            details.addCell("  ");
            details.addCell("Vehicle ID : "+vehDetails.elementAt(0).toString());
            details.addCell("Service Advisor : "+empDetails.elementAt(0).toString());
            details.addCell("Reg no. : "+vehDetails.elementAt(1).toString());
            details.addCell("Mobile : "+empDetails.elementAt(1).toString());
            details.addCell("Company : "+vehDetails.elementAt(2).toString());
            details.addCell(" ");
            details.addCell("Model : "+vehDetails.elementAt(3).toString());
            details.addCell(" ");
            document.add(details);
            document.add(new Paragraph(" "));
            PdfPTable table = new PdfPTable(5);
            table.setWidthPercentage(100);
            PdfPCell cell = new PdfPCell(new Paragraph("Bill Receipt"));
            cell.setColspan(5);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
            table.addCell(cell); 
            table.addCell("Productid");
            table.addCell("Product Name");
            table.addCell("MRP");
            table.addCell("Quantity");
            table.addCell("Total");
            for(int row = 0; row < PartUsedTable.getRowCount(); row++){
                for(int col = 0; col < PartUsedTable.getColumnCount(); col++){
                    table.addCell(PartUsedTable.getValueAt(row, col).toString());
                }
            }
            PdfPCell cell1 = new PdfPCell();
            cell1.setBorderWidthRight(0f);
            table.addCell(cell1);
            cell1.setBorderWidthLeft(0f);
            table.addCell(cell1);
            table.addCell(cell1);
            table.addCell("Total");
            for(int row = 0; row <PartUsedTable.getRowCount(); row++)
                total += (double)PartUsedTable.getValueAt(row, 4);
            System.out.println(total);
            table.addCell("Rs. "+total);
            document.add(table);
            
            
            document.add(new Paragraph(" "));
            document.add(new Paragraph(" "));
            document.add(new Paragraph(" "));
            PdfPTable sign = new PdfPTable(2);
            sign.setWidthPercentage(100);
            sign.getDefaultCell().setBorderWidth(0f);
            sign.addCell("Customer Signature");
            PdfPCell signCell = new PdfPCell();
            signCell.setPhrase(new Phrase("Authorized Signature"));
            signCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            signCell.setBorderWidth(0f);
            sign.addCell(signCell);
            document.add(sign);
//            document.add(new Paragraph("Customer Signature                                                                        Authorized Signature"));
            document.close();
            if (Desktop.isDesktopSupported()) {
                try {
                    File myFile = new File("E:\\Project\\car service Java\\VehServiceMgmt\\Report.pdf");
                    Desktop.getDesktop().open(myFile);
                } catch (IOException ex) {
                    System.out.println("bill gen block\nopen file error"+ex);
                    InfoDialog(ex.toString());
                    // no application registered for PDFs
                }
            }
            
        }
        catch(Exception e){
            System.out.println("bill block :"+e);
            
        }
    }//GEN-LAST:event_generateBillActionPerformed

    private void billDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billDeleteActionPerformed
        // TODO add your handling code here:
        if(PartUsedTable.getSelectedRow() != -1){
            double total = 0;
            Vector values = new Vector();
            values.add(servID);
            values.add(PartUsedTable.getValueAt(PartUsedTable.getSelectedRow(),0));
            try {
                dbconn.partsUsedDelete(values);
                String[] coln = {"Part ID", "Part Name", "MRP", "Quantity", "Total Price"};
                Vector<String> columnNames = new Vector<String>();
                Collections.addAll(columnNames, coln);
                partUsedDetails = dbconn.partUsedDetails(servID);
                PartUsedTable.setModel(new DefaultTableModel(partUsedDetails, columnNames));
                for(int row = 0; row <PartUsedTable.getRowCount(); row++){
                    total += (double)PartUsedTable.getValueAt(row, 4);
                }
                values.removeAllElements();
                values.add(total);
                values.add(servID);
                dbconn.serviceUpdateTotal(values);
            } catch (SQLException ex) {
                Logger.getLogger(BillDialog.class.getName()).log(Level.SEVERE, null, ex);
                
            }
        }
    }//GEN-LAST:event_billDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BillDialog dialog = new BillDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PartUsedTable;
    private javax.swing.JButton billAdd;
    private javax.swing.JButton billDelete;
    private javax.swing.JButton generateBill;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jobDesc;
    private javax.swing.JComboBox<String> partName;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField regNo;
    private javax.swing.JTextField servDate;
    private javax.swing.JTextField serviceAdvisor;
    // End of variables declaration//GEN-END:variables
}
